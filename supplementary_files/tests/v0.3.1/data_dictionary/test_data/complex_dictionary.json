{
    "element_1": {
        "description": "element_1 description",
        "type": "string",
        "required": {
            "requirement": true
        },
        "domain": "element_1 domain",
        "example": [
            "element_1 example"
        ],
        "pattern": "^.*$",
        "pattern_notes": "Matches on an entire line, regardless of content, including an empty line."
    },
    "element_2": {
        "description": "element_2 description",
        "type": "object",
        "required": {
            "requirement": false
        },
        "properties": {
            "element_2_nested_child_1": {
                "description": "element_2_nested_child_1 description",
                "type": "integer",
                "required": {
                    "requirement": true
                },
                "domain": "element_2_nested_child_1 domain",
                "example": [
                    123,
                    234
                ],
                "pattern": "^\\d{3}$",
                "pattern_notes": "Matches on an integer of 3 digits."
            },
            "element_2_nested_child_2": {
                "description": "element_2_nested_child_2 description",
                "type": "string",
                "required": {
                    "requirement": true
                },
                "domain": "element_2_nested_child_2 domain",
                "example": [
                    "element_2_nested_child_2 example 1"
                ],
                "pattern": "^.*$",
                "pattern_notes": "Matches on an entire line, regardless of content, including an empty line."
            },
            "element_2_nested_child_3": {
                "description": "element_2_nested_child_3 description",
                "type": "object",
                "required": {
                    "requirement": false
                },
                "properties": {
                    "element_2_nested_child_3_child_1": {
                        "description": "element_2_nested_child_3_child_1 description",
                        "type": "array",
                        "required": {
                            "requirement": true
                        },
                        "items": {
                            "element_2_nested_child_3_child_1_child_1": {
                                "description": "element_2_nested_child_3_child_1_child_1 description",
                                "type": "string",
                                "required": {
                                    "requirement": true
                                },
                               "domain": "element_2_nested_child_3_child_1_child_1 domain",
                                "example": [
                                    "element_2_nested_child_3_child_1_child_1 example 1",
                                    "element_2_nested_child_3_child_1_child_1 example 2"
                                ],
                                "pattern": "^.*$",
                                "pattern_notes": "Matches on an entire line, regardless of content, including an empty line." 
                            }
                        }
                    }
                }
            }
        }
    },
    "element_3": {
        "description": "element_3 description",
        "type": "array",
        "required": {
            "requirement": true
        },
        "items": {
            "element_2_nested_child_1": {
                "description": "element_2_nested_child_1 description",
                "type": "string",
                "required": {
                    "requirement": true
                },
                "domain": "element_2_nested_child_1 domain",
                "example": [
                    "element_2_nested_child_1 example 1",
                    "element_2_nested_child_1 example 2"
                ],
                "pattern": "^.*$",
                "pattern_notes": "Matches on an entire line, regardless of content, including an empty line." 
            },
            "element_2_nested_child_2": {
                "description": "element_2_nested_child_2 description",
                "type": "object",
                "required": {
                    "requirement": true
                },
                "properties": {
                    "element_2_nested_child_2_child_1": {
                        "description": "element_2_nested_child_2_child_1 description",
                        "type": "string",
                        "required": {
                            "requirement": true
                        },
                        "domain": "element_2_nested_child_2_child_1 domain",
                        "example": [
                            "element_2_nested_child_2_child_1 example 1",
                            "element_2_nested_child_2_child_1 example 2"
                        ],
                        "pattern": "^.*$",
                        "pattern_notes": "Matches on an entire line, regardless of content, including an empty line." 
                    }
                }
            },
            "element_2_nested_child_3": {
                "description": "element_2_nested_child_3 description",
                "type": "array",
                "required": {
                    "requirement": false
                },
                "items": {
                    "element_2_nested_child_3_child_1": {
                        "description": "element_2_nested_child_3_child_1 description",
                        "type": "string",
                        "required": {
                            "requirement": true
                        },
                        "domain": "element_2_nested_child_3_child_1 domain",
                        "example": [
                            "element_2_nested_child_3_child_1 example 1",
                            "element_2_nested_child_3_child_1 example 2"
                        ],
                        "pattern": "^.*$",
                        "pattern_notes": "Matches on an entire line, regardless of content, including an empty line." 
                    }
                }
            }
        }
    }
}